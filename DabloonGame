package project;
import java.util.Random;
import java.util.Scanner;


public class DabloonGame extends Encounters {
	private static Scanner scan = new Scanner(System.in);
	private int dabloonWallet;
	
	
	public class Game{
		
		Traveller traveller = new Traveller();
		Traveller.Merchant merchant = traveller.new Merchant();
		public void play(){
			
			
			System.out.println("\n########################################################################################"
					+ "\nHello Traveller! I see you're new to this world.\nMay I know your name?.\nEnter your name: ");

			String name = scan.nextLine();
			Traveller.setName(name);

			System.out.println("\n########################################################################################"
					+ "\nHello, " + Traveller.getName() + ".");
			setDabloons(traveller.RandomDabloons(dabloonWallet));
			dabloonWallet = getDabloons();

			encounters(dabloonWallet);
			
		}
		
		public void encounters(int dabloonWallet){


			Boolean isLoop = true;


			while(dabloonWallet < 2000 && isLoop == true) {
				System.out.println("\n########################################################################################"
						+ "\n\nPRESS:\n[1]TRAVEL\n[2]REST\n[3]INVENTORY");
				String action = scan.nextLine();
				int parsedAnswer = answerParser(action);

				if(parsedAnswer == 2) {
					isLoop = false;
				}
				else {
					
					if(parsedAnswer == 1) {
						
					
						int randomEvent = randomizer(dabloonWallet); 
						
						switch(randomEvent){
						case 1: {
							dabloonWallet = task(dabloonWallet);
							System.out.println("\nJust finished task. Here's how much we've earned: " + dabloonWallet);
							continue;
						}
						case 2: {
							

							dabloonWallet = merchant.merchant(dabloonWallet);
							
						}
						case 3: {//thieves

							Random stolen = new Random(); 
							int stolenDabloons = stolen.nextInt(50);
					
							System.out.println("\nOh no! There are thieves!!");
							
							if (dabloonWallet < stolenDabloons) {
							
								System.out.println("All the dabloons are taken by the thieves");
								dabloonWallet = 0;
						
							} else {
								System.out.println("Dabloons is decreased by: " + stolenDabloons);
								dabloonWallet -= stolenDabloons;
							}
							System.out.println(dabloonWallet + " Dabloons left after encountering thieves.");
						}
						default: {
							/* falls through */
						}
						}

					}
					else if (parsedAnswer == 3){
						merchant.inventoryPresenter();
					}
					else{
						continue;
					}
				}

			}
				
		}

	}
	

	@Override
	public int answerParser (String action) {
		try {
			  int num = Integer.parseInt(action);
			  return num;
			} catch (NumberFormatException e) {
			  System.out.println("Invalid number format");
			  return 4;
			}
	}

	
	public int randomizer(int dabloonWallet) {


		Random rEvent = new Random(); 
		int randomEvent = rEvent.nextInt(3)+1;

		if((dabloonWallet < 200 && randomEvent == 2) || (dabloonWallet < 500 && randomEvent == 3)) {
			randomEvent = 1;
			return randomEvent;
		} else {
			return randomEvent;
		}
		
		
		
	}
	
	public int getDabloons(){
		return dabloonWallet;
	}

	public void setDabloons(int dabloonWallet) {
		this.dabloonWallet = dabloonWallet;
	}

	
	public static void main(String[] args){
		


		
		DabloonGame dabloonGame = new DabloonGame();
		DabloonGame.Game game = dabloonGame.new Game();
		game.play();
		
		System.out.println("\nDabloons earned after playing: " );
		System.out.println("Thank you for playing!");
		System.out.println("Closing game...");
		
	}


}
